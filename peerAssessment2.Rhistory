matrix(as.character(my_data$patient), as.character(my_data$bp))
table(as.character(my_data$patient), as.character(my_data$bp))
dataframe(as.character(my_data$patient), as.character(my_data$bp))
data.frame(as.character(my_data$patient), as.character(my_data$bp))
barplot()
barplot(my_data$bp)
par(mar)
par(mar=c(1,1,1,1))
par(mar)
dev.off()
barplot(my_data$bp)
barplot(my_data$bp, names.arg = my_data$patient)
?barplot
barplot(my_data$bp, names.arg = my_data$patient, legend.text = "Legend")
barplot(my_data$bp, names.arg = my_data$patient, legend.text = "Blood Pressure")
barplot(my_data$bp, names.arg = my_data$patient, legend.text = "Blood Pressure", xlab = "Patient", ylab = "BP")
flag_colors
sum(flag_colors$black)
barplot(flag_colors)
barplot(sum(flag_colors))
flag_colors
my_data
matrix(flag_colors)
matrix(flags)
flags
barplot(flags)
barplot(sum(flag_colors$black)
)
barplot(c(sum(flag_colors$black, sum($flag_colors$red))))
barplot(c(sum(flag_colors$black, sum(flag_colors$red))))
barplot(table(sum(flag_colors$black, sum(flag_colors$red))))
table(flag_colors$black)
matrix(flag_colors$black)
matrix(flag_colors$black > 0)
matrix(sum(flag_colors$black))
table(sum(flag_colors$black))
table(sum(flag_colors$black),sum(flag_colors$red))
?table
tabulate(flag_colors)
?tabulate
flag_shapes
sum(flag_shapes$stars)
sum(flag_shapes$sunstars)
sum(flag_shapes)
mean(flag_shapes)
matrix(flag_shapes)
table(flag_shapes)
flag_shapes
lapply
sapply(flag_shapes)
?sapply
sapply(flag_shapes,sum)
sapply(flag_shapes,sum)[[1]]
sapply(flag_shapes,sum)[1
sapply(flag_shapes,sum)[1]
sapply(flag_shapes,sum)[1]]
sapply(flag_shapes,sum)[1]
barplot(sapply(flag_shapes,sum)[[1]])
?barplot
barplot(sapply(flag_shapes,sum)[[1]])
sapply(flag_shapes,sum)[[1]]
sapply(flag_shapes,sum)[1]
sapply(flag_shapes,sum)[1]$name
sapply(flag_shapes,sum)[1][1]
sapply(flag_shapes,sum)[1][[1]]
dim(sapply(flag_shapes,sum)[1])
dims(sapply(flag_shapes,sum)[1])
name(sapply(flag_shapes,sum)[1])
attributes(sapply(flag_shapes,sum)[1])
sapply(flag_shapes,sum)[1]$names
sapply(flag_shapes,sum)[1]["names"]
sapply(flag_shapes,sum)[1][names]
flag_shapes
flag_shapes > 0
sapply(flag_shapes,sum)
flag_shapes[1]
flag_shapes[[1]]
?head
head(flag_shapes, n = 1L)
dim(flag_shapes)
?dim
dimnames(flag_shapes)
dimnames(flag_shapes)[[2]]
barplot(sapply(flag_shapes,sum), arg.names = dimnames(flag_shapes[[2]])
)
barplot(sapply(flag_shapes,sum), arg.names = dimnames(flag_shapes[[2]]))
barplot(sapply(flag_shapes,sum), arg.names = dimnames(flag_shapes[[2]]), xlab = "Shape", ylab = "Volume")
barplot(sapply(flag_colors,sum), arg.names = dimnames(flag_colors[[2]]), xlab = "Shape", ylab = "Volume")
barplot(sapply(flag_colors,sum), arg.names = dimnames(flag_colors[[2]]), xlab = "Shape", ylab = "Color")
barplot(sapply(flag_colors,sum), arg.names = dimnames(flag_colors[[2]]), xlab = "Color", ylab = "Number Appearances")
pie(slices = sapply(flag_colors,sum), labels = dimnames(flag_colors[[2]]))
pie(slices = sapply(flag_colors,sum), labels = dimnames(flag_colors[[2]]), main = "Blah")
dev.off()
pie(slices = sapply(flag_colors,sum), labels = dimnames(flag_colors[[2]]), main = "Blah")
?pie
pie(sapply(flag_colors,sum), labels = dimnames(flag_colors[[2]]), main = "Color breakdown")
pie(sapply(flag_colors,sum), labels = c(dimnames(flag_colors[[2]])), main = "Color breakdown")
pie(sapply(flag_colors,sum), labels = c("mom", "data", "dad"), main = "Color breakdown")
dimnameas(flag_colors[[2]])
dimnames(flag_colors[[2]])
flag_colors
dims(flag_colors)
dim(flag_colors)
dim(flag_colors)[2]
dim(flag_colors)[[2]]
dimnames(flag_colors)[[2]]
pie(sapply(flag_colors,sum), labels = c(dimnames(flag_colors[[2]])), main = "Color breakdown")
pie(sapply(flag_colors,sum), labels = dimnames(flag_colors[[2]]), main = "Color breakdown")
pie(sapply(flag_colors,sum), labels = dimnames(flag_colors[2]), main = "Color breakdown")
pie(sapply(flag_colors,sum), labels = dimnames(flag_colors[[2]]), main = "Color breakdown")
pie(sapply(flag_colors,sum), main = "Color breakdown")
pie(sapply(flag_colors,sd), main = "Color breakdown")
sapply(flag_colors,sd)
pie(sapply(flag_colors,mean), main = "Color breakdown")
pie(sapply(flag_colors,sum), main = "Color breakdown")
pie(sapply(flag_colors,mean), main = "Color breakdown")
pie(sapply(flag_colors,mean), main = "Color breakdown")
pie(sapply(flag_colors,mode), main = "Color breakdown")
pie(sapply(flag_colors,max), main = "Color breakdown")
pie(sapply(flag_colors,sum), main = "Color breakdown")
scatter(sapply(flag_colors,sum), main = "Color breakdown")
barplot(sapply(flag_colors,sum), main = "Color breakdown")
?barplot
barplot(sapply(flag_colors,sum), main = "Color breakdown", sub = "Sum of color apperances")
barplot(sapply(flag_colors,sum), main = "Color breakdown", sub = "Sum of color apperances")
?barplot
barplot(sapply(flag_colors,sum), main = "Color breakdown", sub = "Sum of color apperances", col = dimnames(flag_colors[[2]])
)
barplot(sapply(flag_colors,sum), main = "Color breakdown", sub = "Sum of color apperances", col = dimnames(flag_colors[[2]]))
dimnames(flag_colors[[2]])
dimnames(flag_colors)
dimnames(flag_colors[2])
dimnames(flag_colors[[2]])
dimnames(flag_colors)
dimnames(flag_colors)[[2]]
barplot(sapply(flag_colors,sum), main = "Color breakdown", sub = "Sum of color apperances", col = dimnames(flag_colors)[[2]])
?barblot
?barplot
barplot(sapply(flag_colors,sum), main = "Color breakdown", sub = "Sum of color apperances", col = dimnames(flag_colors)[[2]], density = 2)
barplot(sapply(flag_colors,sum), main = "Color breakdown", sub = "Sum of color apperances", col = dimnames(flag_colors)[[2]], density = 4)
barplot(sapply(flag_colors,sum), main = "Color breakdown", sub = "Sum of color apperances", col = dimnames(flag_colors)[[2]], density = 6)
library("httr", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.2")
library("curl", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.2")
library("RCurl", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.2")
library("jsonlite", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.2")
library("foreign", lib.loc="/usr/lib64/R/library")
fromJSON()
?fromJSON
load("home/jason/data_file.json")
load("/home/jason/data_file.json")
read("/home/jason/data_file.json")
read.txt("/home/jason/data_file.json")
fromJSON("/home/jason/data_file.json")
fromJSON("/home/jason/data_file.json", simplifyVector = TRUE)
weather_vector <- fromJSON("/home/jason/data_file.json", simplifyVector = TRUE)
weather_vector[1]
weather_vector[2]
weather_vector[1]]
weather_vector[[1]]
weather_vector[1]$count
weather_vector[1]$resultset
weather_vector$resultset
weather_vector$resultset$count
weather_vector[1]$resultset$count
weather_vector[[1]]$resultset
weather_vector <- fromJSON("/home/jason/data_file.json", simplifyVector = TRUE, flatten = TRUE)
weather_vector$results
weather_vector$results$mindate
weather_vector$results$maxdate
weather_vector <- fromJSON("/home/jason/data_file.json", simplifyVector = TRUE)
weather_vector <- fromJSON("/home/jason/data_file.json")
weather_vector <- fromJSON("/home/jason/data_file.json")
weather_vector$results[[1]]$mindate
weather_vector$results[[1]]$name
weather_vector$results[1]$name
weather_vector[[1]]
weather_vector[[2]]
weather_vector[[2]]$results
weather_vector[2]$results
weather_vector[2]$results[1]
weather_vector[2]$results[1]$mindate
weather_vector[2]$results[1]$maxdate
weather_vector[2]$results[1]$name
weather_vector[2]$results$name
weather_vector[2]$results$datacoverage
weather_vector[2]$results$id
dims(weather_vector[2]$results$id)
dim(weather_vector[2]$results$id)
dim(weather_vector)
dimnames(weather_vector[2])
dim(weather_vector[2])
swirl()
play()
summary(flags)
head(flags)
nxt()
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$reg, summary)
tapply(flags$population, flags$ref, summary)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
clasS(plants)
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4, replace=TRUE)
sample(1:6,4, replace=TRUE)
sample(1:20,10, replace=FALSE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100,replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois(5, mean = 10)
?rpois
rpois(5, 10)
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
dl <- Sys.Date()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
uncless(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t2
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance", xlab = "Speed")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch 2)
plot(cars, pch = 2)
load(mtcars)
read(mtcars)
data.frame(mtcars)
data(mtcars)
head(mtcars)
play()
head(mtcars)
dim(mtcars)
names(mtcars)
summar(mycars)
summary(mycars)
summary(mtcars)
nxt()
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
ls()
rm(s)
rm(x)
rm(y)
q()
unzip
ls()
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 72:73)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 72:73)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 72:73)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 72:73)
pollutantmean("specdata", "nitrate", 72:73)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 300)
usfuldata
usefuldata
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 300)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 300)
file <- paste("specdata", "/", "300", ".csv", sep = "")
getwd()
file <- paste(getwd(), "specdata", "/", "300", ".csv", sep = "")
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 300)
source('~/pollutantmean.R')
file <- paste(getwd(), "specdata", "/", "300", ".csv", sep = "")
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 300)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 300)
pollutantmean("specdata", "nitrate", "300")
file <- paste(getwd(), "/", "specdata", "/", "300", ".csv", sep ="")
usefuldata <- read.csv(file, header = TRUE, sep = ",")
names(usefuldata)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", "300")
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", "300")
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", "300")
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
fileslist
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
filelist
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
pollutantmean("specdata", "nitrate", 1)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1)
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:32)
source('~/pollutantmean.R')
?read.csv
read.csv("/home/jason/specdata/200.csv", header = TRUE, col.names = "nitrate")
read.csv("/home/jason/specdata/200.csv", header = FALSE, col.names = "nitrate"
)
read.csv("/home/jason/specdata/200.csv", header = FALSE, col.names = "nitrate", sep = ",")
read.csv("/home/jason/specdata/200.csv", header = TRUE, col.names = "nitrate", sep = ",")
read.table("/home/jason/specdata/200.csv")
read.table("/home/jason/specdata/200.csv", header = TRUE)
read.table("/home/jason/specdata/200.csv", header = TRUE, sep = ",")
filedata <- read.table("/home/jason/specdata/200.csv", header = TRUE, sep = ",")
?subset
usefuldata <- subset(filedata, !is.na(nitrate))
usefuldata <- subset(filedata, !is.na(nitrate), select(c(date, nitrate))
)
usefuldata <- subset(filedata, !is.na(nitrate), select = c(date, nitrate))
usefuldata <- subset(filedata, !is.na(nitrate), select = c(date, nitrate))
head(usefuldata)
usefuldata <- subset(filedata, !is.na(nitrate))
mean(usefuldata)
mean(usefuldata$nitrate)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 42)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 42)
pollutantmean("specdata", "nitrate", 42:44)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 200)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 200)
install.packages("xlsx")
install.packages("xml")
install.packages("XML")
ls()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
install.packages("qplot")
?qplot
??qplot
install.packages("ggplot2")
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library("ggplot2")
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
setwd("/home/jason/Rprogs/reproducible/assignment2/")
save.image("assignment2.Rdata")
load.image("assignment2.Rdata")
load("assignment2.Rdata")
?history
savehistory(file = ".Rhistory")
quit()
ls()
?get
?wget
??wget
?download
?file
source('~/Rprogs/reproducible/repData_peerAssessment2/peerAssessment2.R', echo=TRUE)
?download.file
source('~/Rprogs/reproducible/repData_peerAssessment2/peerAssessment2.R', echo=TRUE)
ls()
dir()
setwd("~/Rprogs/reproducible/repData_peerAssessment2/")
getwd()
delete()
dir()
source('~/Rprogs/reproducible/repData_peerAssessment2/peerAssessment2.R', echo=TRUE)
dir()
file.remove("stormdata.csv.bz2")
dir()
source('~/Rprogs/reproducible/repData_peerAssessment2/peerAssessment2.R', echo=TRUE)
head(stormData)
dir()
dir()
subset(stormData, CROPDMG > 0, select = c(CROPDMG, CROPDMGEXP, WFO))
subset(stormData, CROPDMG > 0, select = c(CROPDMG, CROPDMGEXP))
subset(stormData, CROPDMG > 0, select = c(CROPDMG, CROPDMGEXP))
save.image("peerAssessment2_environment.Rdata")
dir()
?savehistory
savehistory(file = "peerAssessment2.Rhistory")
